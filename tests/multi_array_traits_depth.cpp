#include <vector>#include "tests.h"#include "../multi_array_traits_depth.h"using pps::multi_array::traits_depth;namespace pps {namespace multi_array {template<class T, std::size_t N>struct traits_depth<std::vector<T>, N>{	static const std::size_t value = traits_depth<T, N + 1>::value;};}}int main(){	PPS_TESTS_ASSERT(traits_depth<int>::value == 0);	PPS_TESTS_ASSERT(traits_depth<int*>::value == 1);	PPS_TESTS_ASSERT(traits_depth<int**>::value == 2);	PPS_TESTS_ASSERT(traits_depth<double***>::value == 3);	PPS_TESTS_ASSERT(traits_depth<std::vector<int>>::value == 1);	PPS_TESTS_ASSERT(traits_depth<std::vector<double***>>::value == 4);	return 0;}