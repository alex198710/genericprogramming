#include "tests.h"#include <vector>#include <list>#include "../include/pps/range/traits.h"#include "../include/pps/range/begin.h"#include "../include/pps/range/end.h"using pps::range::traits;using pps::range::begin;using pps::range::end;int main(){	typedef std::list<int> TableType1;	TableType1 t1;	t1.push_back(21);	t1.push_back(38);	t1.push_back(45);	traits<TableType1>::iterator it1(begin(t1));	PPS_TESTS_ASSERT(*it1++ == 21);	PPS_TESTS_ASSERT(*it1++ == 38);	PPS_TESTS_ASSERT(*it1++ == 45);	PPS_TESTS_ASSERT(it1 == end(t1));	typedef std::vector<TableType1> TableType2;	TableType2 t2;	t2.push_back(t1);	TableType1 t3;	t3.push_back(56);	t3.push_back(29);	t3.push_back(9);	t2.push_back(t3);	traits<TableType2>::iterator it2(begin(t2));	traits<typename traits<TableType2>::valueType>::iterator it3;	it3 = begin(*it2);	PPS_TESTS_ASSERT(*it3++ == 21);	PPS_TESTS_ASSERT(*it3++ == 38);	PPS_TESTS_ASSERT(*it3++ == 45);	PPS_TESTS_ASSERT(it3 == end(*it2++));	it3 = begin(*it2);	PPS_TESTS_ASSERT(*it3++ == 56);	PPS_TESTS_ASSERT(*it3++ == 29);	PPS_TESTS_ASSERT(*it3++ == 9);	PPS_TESTS_ASSERT(it3 == end(*it2++));	PPS_TESTS_ASSERT(it2 == end(t2));	return 0;}