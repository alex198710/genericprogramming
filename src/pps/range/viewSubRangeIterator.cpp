#include "../../../include/pps/range/viewSubRangeIterator.h"namespace pps {namespace range {viewSubRangeIterator::viewSubRangeIterator(std::size_t p_index, std::size_t p_increment): m_index(p_index), m_increment(p_increment){}viewSubRangeIterator::viewSubRangeIterator(const viewSubRangeIterator& p_iterator): m_index(p_iterator.m_index), m_increment(p_iterator.m_increment){}viewSubRangeIterator& viewSubRangeIterator::operator=(const viewSubRangeIterator& p_iterator){	if(&p_iterator == this)		return *this;	m_index = p_iterator.m_index;	m_increment = p_iterator.m_increment;	return *this;}bool viewSubRangeIterator::operator==(const viewSubRangeIterator& p_iterator) const{	return m_index == p_iterator.m_index && m_increment == p_iterator.m_increment;}bool viewSubRangeIterator::operator!=(const viewSubRangeIterator& p_iterator) const{	return m_index != p_iterator.m_index || m_increment != p_iterator.m_increment;}std::size_t viewSubRangeIterator::operator*() const{	return m_index;}viewSubRangeIterator& viewSubRangeIterator::operator++(){	m_index += m_increment;	return *this;}viewSubRangeIterator viewSubRangeIterator::operator++(int){	viewSubRangeIterator ret(*this);	m_index += m_increment;	return ret;}}}